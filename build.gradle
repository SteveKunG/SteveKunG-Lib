buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.10"
}

def api = new groovy.json.JsonSlurper().parseText(file("${api_token_path}").text)
def keystore = new groovy.json.JsonSlurper().parseText(file("${keystore_path}").text)
def mcVersion = project.mc_version

apply plugin: "net.minecraftforge.gradle.forge"

version = project.version
group = "stevekung.mods.stevekunglib"
archivesBaseName = "SteveKunG's-Lib-All"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.12.2-14.23.4.2708"
    runDir = "run"
    mappings = "snapshot_20171003"
    makeObfSourceJar = false

    replace "@FINGERPRINT@", keystore.sha1
    replaceIn "SteveKunGLib.java"
}

repositories {
    // Curse Gradle
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

ext.finalJar = "build/libs/SteveKunG's-Lib-" + mcVersion + "-" + version + ".jar"
ext.coreJar = "build/libs/" + archivesBaseName + "-" + version + ".jar"
ext.coreFiles = ["stevekung/mods/stevekunglib/**", "META-INF/stevekunglib_at.cfg"]

curseforge {
    apiKey = api.stevekung_lib
    project {
        id = "296019"
        changelog = "Change Log"
        releaseType = "release"
        addGameVersion mcVersion

        mainArtifact(file("build/libs/SteveKunG's-Lib-" + mcVersion + "-" + version + ".jar")) {
            displayName = "SteveKunG's-Lib-" + mcVersion + "-" + version
        }
    }
}

// signing jar first
task buildJar(type: SignJar, dependsOn: "processJar") {
    keyStore = keystore.keystore_path
    alias = keystore.alias
    storePass = keystore.keystore_pass
    keyPass = keystore.keystore_pass
    inputFile = project.ext.finalJar
    outputFile = project.ext.finalJar
}

// processing jar
task processJar(type: Jar, dependsOn: "rePackAllJar") {
    outputs.upToDateWhen { false }
    baseName = "SteveKunG's-Lib-" + mcVersion

    from(zipTree(project.ext.coreJar)) {
        includes.addAll(project.ext.coreFiles)
    }
    manifest {
        attributes.put("FMLAT", "stevekunglib_at.cfg")
        attributes.put("FMLCorePluginContainsFMLMod", "true")
    }
}

task rePackAllJar(type: Jar, dependsOn: "copyModFiles") {
    from "temporary"
}

task copyModFiles(type: Copy, dependsOn: "reobfJar") {
    from(zipTree(project.ext.coreJar))
    into "temporary"
}

task deleteTemporary(type: Delete) {
    delete "temporary"
}

task buildDeobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = "deobf"
    manifest {
        attributes.put("FMLAT", "stevekunglib_at.cfg")
        attributes.put("FMLCorePluginContainsFMLMod", "true")
    }
}

buildJar.finalizedBy(deleteTemporary)