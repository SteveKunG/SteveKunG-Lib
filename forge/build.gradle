plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "com.matthewprenger.cursegradle"
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    mixinConfigs = ["mixins.stevekung's_lib.json", "mixins.stevekung's_lib_forge.json"]
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.mc_version}-${rootProject.forge_version}"
    modApi "me.shedaniel:architectury-forge:${rootProject.architectury_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentForge(project(path: ":common")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

String fileName = "${rootProject.archives_base_name}-mc${rootProject.mc_version}"

jar {
    version "v${project.version}"
    baseName fileName
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "stevekungs_lib.accesswidener"
    configurations = [project.configurations.shadow]
    classifier "dev"
    version "v${project.version}"
    baseName fileName
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
    classifier "source"
    version "v${project.version}"
    baseName fileName
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "forge"
    version "v${project.version}"
    baseName fileName
}

artifacts {
    archives sourcesJar
    archives shadowJar
}

curseforge {
    if (project.hasProperty("upload_api_key")) {
        apiKey = project.upload_api_key
        project {
            id = "296019"
            changelog = file("../CHANGE_LOG.md")
            changelogType = "markdown"
            releaseType = "release"
            addGameVersion "Forge"
            addGameVersion rootProject.mc_version

            mainArtifact(remapJar.archiveFile) {
                displayName = "[Forge] ${rootProject.archives_base_name}-mc${rootProject.mc_version}-v${project.version}"
            }
            relations {
                requiredDependency "architectury-forge"
            }
            afterEvaluate {
                uploadTask.dependsOn(remapJar)
            }
            addArtifact sourcesJar
            addArtifact shadowJar
        }
        options {
            forgeGradleIntegration = false
        }
    }
}